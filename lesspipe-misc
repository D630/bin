#!/usr/bin/env bash
#
# A preprocessor for less.

# TODO(D630): revise

# -- CONFIG.

Lesspipe::Init ()
{
        { typeset i=$(</dev/fd/0) ; } <<-'INIT'
typeset -A Mime=(
        [application/pdf]='pdftotext -layout %s -'
        [application/postscript]='pstotext %s'
        [application/vnd.rn-realmedia]='mediainfo %s'
        [application/x-bittorrent]='transmissioncli --info %s'
        [application/x-shockwave-flash]='mediainfo %s'
        [audio/*]='mediainfo %s'
        [image/*]='identify %s'
        [text/html]='w3m -dump -T text/html -O UTF-8 < %s'
        [text/troff]='man -l %s'
        [video/*]='mediainfo %s'
)

typeset -A Ext=(
        [---]="${LESSCOLORIZER=code2color} %s"
        [--]='cat %s'
        [-]='ls -AFhl --color=always -- %s'
        [crl]='openssl crl -hash -text -noout -in %s'
        [crt]='openssl x509 -hash -text -noout -in %s'
        [csr]='openssl req -text -noout -in %s'
        [doc]='antiword %s'
        [dvi]='dvi2tty %s'
        [pdf]='ps2ascii %s'
        [pem]='openssl x509 -hash -text -noout -in %s'
        [ps]='ps2ascii %s'
        [rtf]='unrtf --nopict --text %s'
)
INIT
        printf '%s' "$i"

} 2>/dev/null

# -- FUNCTIONS.

Lesspipe::CheckMime ()
if
        typeset mime_type=$(file -L -b --mime-type "$1")
        [[ -n ${Mime[$mime_type]} ]]
then
        command=( ${Mime[$mime_type]} )
elif
        [[ -n ${Mime[${mime_type%/*}/*]} ]]
then
        command=( ${Mime[${mime_type%/*}/*]} )
else
        return 1
fi

Lesspipe::CheckExt ()
if
        [[ -n ${1/${1##*.}/} && -n ${Ext[${1##*.}]} ]]
then
        command=( ${Ext[${1##*.}]} )
else
        if
                [[ $LESS == *-[rR]* || $LESSCOLOR -eq 2 ]]
        then
                typeset -x LESSQUIET=true
                command=( ${Ext[---]} )
        else
                exit 1
        fi
fi

Lesspipe::ExecCommand ()
if
        command -v "${command[0]}" \
        1>/dev/null \
        2>&1;
then
        eval "${command_quoted[@]}"
else
        printf "%s: Command not found: '%s'\n" "$0" "${command[0]}" \
        1>&2;
        exit 1
fi

Lesspipe::ReplacePattern ()
{
        typeset \
                a \
                q;

        printf -v q '%q' "$1"
        for a in "${!command[@]}"
        do
                command_quoted[$a]=${command[$a]//[%]s/$q}
                command[$a]=${command[$a]//[%]s/$1}
        done
}

# -- MAIN.

if
        (( $# ))
then
        trap 'exit 0' PIPE
        umask 077
else
        exit 1
fi

if
        [[ -x ${HOME}/.lessfilter ]]
then
        "${HOME}/.lessfilter" "$1" && exit 0;
fi

for i in ${LESSIGNORE}
do
        [[ $1 == *.${i} ]] && exit 0;
done

typeset -a \
        command \
        command_quoted;

source <(Lesspipe::Init)

if
        [[ -d $1 ]]
then
        command=( ${Ext[-]} )
elif
        [[ -e $1 ]]
then
        Lesspipe::CheckMime "$1" || Lesspipe::CheckExt "${1,,}";
else
        exit 0
fi

Lesspipe::ReplacePattern "$1"
Lesspipe::ExecCommand

# vim: set ts=8 sw=8 tw=0 et :
