#!/usr/bin/env bash
#
# Source or print all defaults of Taskwarrior's configuration settings (v2.5.1).

# Usage:
# $ task-cv print
# $ . task-cv

typeset -A \
    color_controls \
    context \
    customs \
    dates \
    defaults \
    dependencies \
    files \
    holidays \
    journal_entries \
    miscellaneous \
    reports \
    sync \
    terminal \
    udas \
    urgency;

color_controls['#color.active']='rgb555 on rgb410';
color_controls['#color.alternate']='on gray2';
color_controls['#color.blocked']='white on color8';
color_controls['#color.blocking']='black on color15';
color_controls['#color.burndown.done']='on rgb010';
color_controls['#color.burndown.pending']='on color9';
color_controls['#color.burndown.started']='on color11';
color_controls['#color.calendar.due']='color0 on color1';
color_controls['#color.calendar.due.today']='color15 on color1';
color_controls['#color.calendar.holiday']='color0 in color11';
color_controls['#color.calendar.overdue']='color0 on color9';
color_controls['#color.calendar.today']='color15 on rgb013';
color_controls['#color.calendar.weekend']='on color235';
color_controls['#color.calendar.weeknumber']=rgb013;
color_controls['#color.completed']=;
color_controls['#color.debug']=color4;
color_controls['#color.deleted']=;
color_controls['#color.due']=color1;
color_controls['#color.due.today']=rgb400;
color_controls['#color.error']='white on red';
color_controls['#color.footnote']=color3;
color_controls['#color.header']=color3;
color_controls['#color.history.add']='color0 on rgb500';
color_controls['#color.history.delete']='color0 on rgb550';
color_controls['#color.history.done']='color0 on rgb050';
color_controls['#color.keyword.X']=;
color_controls['#color.label']=;
color_controls['#color.label.sort']=;
color_controls['#color.overdue']=color9;
color_controls['#color.project.X']=;
color_controls['#color.project.none']=;
color_controls['#color.recurring']=rgb013;
color_controls['#color.scheduled']='on rgb001';
color_controls['#color.summary.background']='white on color0';
color_controls['#color.summary.bar']='black on rgb141';
color_controls['#color.sync.added']=rgb010;
color_controls['#color.sync.changed']=color11;
color_controls['#color.sync.rejected']=color9;
color_controls['#color.tag.X']=;
color_controls['#color.tag.next']=rgb440;
color_controls['#color.tag.none']=;
color_controls['#color.tagged']=rgb031;
color_controls['#color.undo.after']=;
color_controls['#color.undo.before']=;
color_controls['#color.until']=;
color_controls['#color.warning']='bold red';
color_controls[color]=on;
color_controls[fontunderline]=yes;
color_controls[rule.color.merge]=yes;
color_controls[rule.precedence.color]=deleted,completed,active,keyword.,tag.,project.,overdue,scheduled,due.today,due,blocked,blocking,recurring,tagged,uda.;
context['#context.<name>=<filter>']=;
context['#context=<name>']=;
customs['#include color.theme']=;
customs['#include holidays.rc']=;
dates[calendar.details.report]=list;
dates[calendar.details]=sparse;
dates[calendar.holidays]=none;
dates[calendar.legend]=yes;
dates[calendar.offset.value]=-1;
dates[calendar.offset]=no;
dates[date.iso]=yes;
dates[dateformat.annotation]=;
dates[dateformat.edit]='Y-M-D H:N:S';
dates[dateformat.holiday]=YMD;
dates[dateformat.info]='Y-M-D H:N:S';
dates[dateformat.report]=;
dates[dateformat]=Y-M-D;
dates[displayweeknumber]=yes;
dates[due]=7;
dates[weekstart]=sunday;
defaults[default.command]=next;
defaults[default.due]=;
defaults[default.project]=;
dependencies[dependency.confirmation]=on;
dependencies[dependency.reminder]=on;
files['#data.location']=~/.task;
files[exit.on.missing.db]=no;
files[gc]=on;
files[hooks]=on;
files[locking]=on;
holidays['#holiday.X.date']=;
holidays['#holiday.X.name']=;
holidays['#monthsperline']=3;
journal_entries[journal.info]=on;
journal_entries[journal.time.start.annotation]='Started task';
journal_entries[journal.time.stop.annotation]='Stopped task';
journal_entries[journal.time]=no;
miscellaneous['#debug.hooks']=0;
miscellaneous['#debug.parser']=0;
miscellaneous['#debug.tls']=0;
miscellaneous[_forcecolor]=no;
miscellaneous[abbreviation.minimum]=2;
miscellaneous[active.indicator]='*';
miscellaneous[alias.burndown]=burndown.weekly;
miscellaneous[alias.ghistory]=ghistory.monthly;
miscellaneous[alias.history]=history.monthly;
miscellaneous[alias.rm]=delete;
miscellaneous[alias.shell]='exec tasksh';
miscellaneous[allow.empty.filter]=yes;
miscellaneous[bulk]=3;
miscellaneous[burndown.bias]=0.666;
miscellaneous[column.padding]=1;
miscellaneous[complete.all.tags]=no;
miscellaneous[confirmation]=yes;
miscellaneous[debug]=no;
miscellaneous[dependency.indicator]=D;
miscellaneous[dom]=on;
miscellaneous[expressions]=infix;
miscellaneous[indent.annotation]=2;
miscellaneous[indent.report]=0;
miscellaneous[json.array]=on;
miscellaneous[json.depends.array]=on;
miscellaneous[list.all.projects]=no;
miscellaneous[list.all.tags]=no;
miscellaneous[nag]='You have more urgent tasks.';
miscellaneous[obfuscate]=no;
miscellaneous[print.empty.columns]=no;
miscellaneous[recurrence.confirmation]=prompt;
miscellaneous[recurrence.indicator]=R;
miscellaneous[recurrence.limit]=1;
miscellaneous[recurrence]=yes;
miscellaneous[regex]=yes;
miscellaneous[row.padding]=0;
miscellaneous[search.case.sensitive]=yes;
miscellaneous[shell.prompt]=task\>;
miscellaneous[summary.all.projects]=no;
miscellaneous[tag.indicator]=+;
miscellaneous[undo.style]=side;
miscellaneous[verbose]=blank,header,footnote,label,new-id,new-uuid,affected,edit,special,project,sync,unwait,recur;
miscellaneous[xterm.title]=no;
reports['#report.X.columns']=;
reports['#report.X.dateformat']=;
reports['#report.X.description']=;
reports['#report.X.filter']=;
reports['#report.X.labels']=;
reports['#report.X.sort']=;
reports[report.active.columns]=id,start,start.age,entry.age,depends.indicator,priority,project,tags,recur,wait,scheduled.remaining,due,until,description;
reports[report.active.description]='Active tasks';
reports[report.active.filter]='status:pending and +ACTIVE';
reports[report.active.labels]=ID,Started,Active,Age,D,P,Project,Tags,Recur,W,Sch,Due,Until,Description;
reports[report.active.sort]=project+,start+;
reports[report.all.columns]=id,status.short,uuid.short,start.active,entry.age,end.age,depends.indicator,priority,project.parent,tags.count,recur.indicator,wait.remaining,scheduled.remaining,due,until.remaining,description;
reports[report.all.description]='All tasks';
reports[report.all.labels]=ID,St,UUID,A,Age,Done,D,P,Project,Tags,R,Wait,Sch,Due,Until,Description;
reports[report.all.sort]=entry-;
reports[report.blocked.columns]=id,uuid.short,start.active,depends,project,tags,recur,wait,scheduled.remaining,due.remaining,until.remaining,description.count,urgency;
reports[report.blocked.description]='Blocked tasks';
reports[report.blocked.filter]='status:pending +BLOCKED';
reports[report.blocked.labels]=ID,Deps,Proj,Pri,Due,Active,Age,Description;
reports[report.blocked.sort]=due+,priority-,start-,project+;
reports[report.blocking.columns]=id,uuid.short,start.active,depends,project,tags,recur,wait.indicator,scheduled.remaining,due.remaining,until.remaining,description.count,urgency;
reports[report.blocking.description]='Blocking tasks';
reports[report.blocking.filter]='status:pending +BLOCKING';
reports[report.blocking.labels]=ID,UUID,A,Deps,Project,Tags,R,W,Sch,Due,Until,Description,Urg;
reports[report.blocking.sort]=urgency-,due+,entry+;
reports[report.completed.columns]=id,uuid.short,entry,end,entry.age,depends,priority,project,tags,recur.indicator,due,description;
reports[report.completed.description]='Completed tasks';
reports[report.completed.filter]=status:completed;
reports[report.completed.labels]=ID,UUID,Created,Completed,Age,Deps,P,Project,Tags,R,Due,Description;
reports[report.completed.sort]=end+;
reports[report.list.columns]=id,start.age,entry.age,depends.indicator,priority,project,tags,recur.indicator,scheduled.countdown,due,until.remaining,description.count,urgency;
reports[report.list.description]='Most details of tasks';
reports[report.list.filter]=status:pending;
reports[report.list.labels]=ID,Active,Age,D,P,Project,Tags,R,Sch,Due,Until,Description,Urg;
reports[report.list.sort]=start-,due+,project+,urgency-;
reports[report.long.columns]=id,start.active,entry,modified.age,depends,priority,project,tags,recur,wait.remaining,scheduled,due,until,description;
reports[report.long.description]='All details of tasks';
reports[report.long.filter]=status:pending;
reports[report.long.labels]=ID,A,Created,Mod,Deps,P,Project,Tags,Recur,Wait,Sched,Due,Until,Description;
reports[report.long.sort]=modified-;
reports[report.ls.columns]=id,start.active,depends.indicator,project,tags,recur.indicator,wait.remaining,scheduled.countdown,due.countdown,until.countdown,description.count;
reports[report.ls.description]='Few details of tasks';
reports[report.ls.filter]=status:pending;
reports[report.ls.labels]=ID,A,D,Project,Tags,R,Wait,S,Due,Until,Description;
reports[report.ls.sort]=start-,description+;
reports[report.minimal.columns]=id,project,tags.count,description.count;
reports[report.minimal.description]='Minimal details of tasks';
reports[report.minimal.filter]='status:pending or status:waiting';
reports[report.minimal.labels]=ID,Project,Tags,Description;
reports[report.minimal.sort]=project+/,description+;
reports[report.newest.columns]=id,start.age,entry,entry.age,modified.age,depends.indicator,priority,project,tags,recur.indicator,wait.remaining,scheduled.countdown,due,until.age,description;
reports[report.newest.description]='Newest tasks';
reports[report.newest.filter]='status:pending or status:waiting';
reports[report.newest.labels]=ID,Active,Created,Age,Mod,D,P,Project,Tags,R,Wait,Sch,Due,Until,Description;
reports[report.newest.sort]=entry-;
reports[report.next.columns]=id,start.age,entry.age,depends,priority,project,tags,recur,scheduled.countdown,due.remaining,until.remaining,description,urgency;
reports[report.next.description]='Most urgent tasks';
reports[report.next.filter]='status:pending limit:page';
reports[report.next.labels]=ID,Active,Age,Deps,P,Project,Tag,Recur,S,Due,Until,Description,Urg;
reports[report.next.sort]=urgency-;
reports[report.oldest.columns]=id,start.age,entry,entry.age,modified.age,depends.indicator,priority,project,tags,recur.indicator,wait.remaining,scheduled.countdown,due,until.age,description;
reports[report.oldest.description]='Oldest tasks';
reports[report.oldest.filter]='status:pending or status:waiting';
reports[report.oldest.labels]=ID,Active,Created,Age,Mod,D,P,Project,Tags,R,Wait,Sch,Due,Until,Description;
reports[report.oldest.sort]=entry+;
reports[report.overdue.columns]=id,start.age,entry.age,depends,priority,project,tags,recur.indicator,scheduled.countdown,due,until,description,urgency;
reports[report.overdue.description]='Overdue tasks';
reports[report.overdue.filter]='(status:pending or status:waiting) and +OVERDUE';
reports[report.overdue.labels]=ID,Active,Age,Deps,P,Project,Tag,R,S,Due,Until,Description,Urg;
reports[report.overdue.sort]=urgency-,due+;
reports[report.ready.columns]=id,start.age,entry.age,depends.indicator,priority,project,tags,recur.indicator,scheduled.countdown,due.countdown,until.remaining,description,urgency;
reports[report.ready.description]='Most urgent actionable tasks';
reports[report.ready.filter]=+READY;
reports[report.ready.labels]=ID,Active,Age,D,P,Project,Tags,R,S,Due,Until,Description,Urg;
reports[report.ready.sort]=start-,urgency-;
reports[report.recurring.columns]=id,start.age,entry.age,depends.indicator,priority,project,tags,recur,scheduled.countdown,due,until.remaining,description,urgency;
reports[report.recurring.description]='Recurring Tasks';
reports[report.recurring.filter]='(status:pending or status:waiting) and (+PARENT or +CHILD)';
reports[report.recurring.labels]=ID,Active,Age,D,P,Project,Tags,Recur,Sch,Due,Until,Description,Urg;
reports[report.recurring.sort]=due+,urgency-,entry+;
reports[report.unblocked.columns]=id,depends,project,priority,due,start.active,entry.age,description;
reports[report.unblocked.description]='Unblocked tasks';
reports[report.unblocked.filter]='status:pending -BLOCKED';
reports[report.unblocked.labels]=ID,Deps,Proj,Pri,Due,Active,Age,Description;
reports[report.unblocked.sort]=due+,priority-,start-,project+;
reports[report.waiting.columns]=id,start.active,entry.age,depends.indicator,priority,project,tags,recur.indicator,wait,wait.remaining,scheduled,due,until,description;
reports[report.waiting.description]='Waiting (hidden) tasks';
reports[report.waiting.filter]=+WAITING;
reports[report.waiting.labels]=ID,A,Age,D,P,Project,Tags,R,Wait,Remaining,Sched,Due,Until,Description;
reports[report.waiting.sort]=due+,wait+,entry+;
sync['#taskd.ca']='<path>';
sync['#taskd.certificate']='<path>';
sync['#taskd.ciphers']=NORMAL;
sync['#taskd.credentials']='<organization>/<user>/<key>';
sync['#taskd.key']='<path>';
sync['#taskd.server']='<host>:<port>';
sync['#taskd.trust']='strict|ignore hostname|allow all';
terminal['#editor']=${VISUAL:-$EDITOR};
terminal[avoidlastcolumn]=no;
terminal[defaultheight]=24;
terminal[defaultwidth]=80;
terminal[detection]=on;
terminal[hyphenate]=on;
terminal[reserved.lines]=1;
udas['#color.uda.X']=;
udas['#color.uda.X.VALUE']=;
udas['#uda.<name>.default']=;
udas['#uda.<name>.default']=;
udas['#uda.<name>.indicator']=U;
udas['#uda.<name>.label']='<column heading>';
udas['#uda.<name>.type']='string|numeric|date|duration';
udas['#uda.<name>.values']='A,B,C';
udas['#urgency.uda.<name>.<value>.coefficient']=;
udas['#urgency.uda.<name>.coefficient']=;
udas[color.uda.priority.H]='color255';
udas[color.uda.priority.L]='color245';
udas[color.uda.priority.M]='color250';
urgency['#urgency.user.keyword.<keyword>.coefficient']=;
urgency['#urgency.user.project.<project>.coefficient']=;
urgency['#urgency.user.tag.<tag>.coefficient']=;
urgency[urgency.active.coefficient]=4.0;
urgency[urgency.age.coefficient]=2.0;
urgency[urgency.age.max]=365;
urgency[urgency.annotations.coefficient]=1.0;
urgency[urgency.blocked.coefficient]=-5.0;
urgency[urgency.blocking.coefficient]=8.0;
urgency[urgency.due.coefficient]=12.0;
urgency[urgency.inherit]=off;
urgency[urgency.project.coefficient]=1.0;
urgency[urgency.scheduled.coefficient]=5.0;
urgency[urgency.tags.coefficient]=1.0;
urgency[urgency.user.tag.next.coefficient]=15.0;
urgency[urgency.waiting.coefficient]=-3.0;

# -- MAIN.

if
    [[ $1 == print ]];
then
    cat <<HEADER
# [Created by taskwarrior-cv, using task $(task _version;), $(date;)]
# Taskwarrior program configuration file.
# For more documentation, see http://taskwarrior.org or try 'man task', 'man task-faq',
# 'man task-tutorial', 'man task-color', 'man task-sync' or 'man taskrc'

# Here is an example of entries that use the default, override and blank values
#   variable=foo   -- By specifying a value, this overrides the default
#   variable=      -- By specifying no value, this means no default
#   #variable=foo  -- By commenting out the line, or deleting it, this uses the default

# Use the commands 'task show' or 'task _show' to see all defaults and overrides

HEADER

    echo '# Files';
    for i in "${!files[@]}" ; do printf '%s=%s\n' "$i" "${files[$i]}" ; done | sort;
    echo;
    echo '# Terminal';
    for i in "${!terminal[@]}" ; do printf '%s=%s\n' "$i" "${terminal[$i]}" ; done | sort;
    echo;
    echo '# Miscellaneous';
    for i in "${!miscellaneous[@]}" ; do printf '%s=%s\n' "$i" "${miscellaneous[$i]}" ; done | sort;
    echo;
    echo '# Dates';
    for i in "${!dates[@]}" ; do printf '%s=%s\n' "$i" "${dates[$i]}" ; done | sort;
    echo;
    echo '# Journal Entries';
    for i in "${!journal_entries[@]}" ; do printf '%s=%s\n' "$i" "${journal_entries[$i]}" ; done | sort;
    echo;
    echo '# Holidays';
    for i in "${!holidays[@]}" ; do printf '%s=%s\n' "$i" "${holidays[$i]}" ; done | sort;
    echo;
    echo '# Dependencies';
    for i in "${!dependencies[@]}" ; do printf '%s=%s\n' "$i" "${dependencies[$i]}" ; done | sort;
    echo;
    echo '# Color Controls';
    for i in "${!color_controls[@]}" ; do printf '%s=%s\n' "$i" "${color_controls[$i]}" ; done | sort;
    echo;
    echo '# Urgency';
    for i in "${!urgency[@]}" ; do printf '%s=%s\n' "$i" "${urgency[$i]}" ; done | sort;
    echo;
    echo '# Defaults';
    for i in "${!defaults[@]}" ; do printf '%s=%s\n' "$i" "${defaults[$i]}" ; done | sort;
    echo;
    echo '# Sync';
    for i in "${!sync[@]}" ; do printf '%s=%s\n' "$i" "${sync[$i]}" ; done | sort;
    echo;
    echo '# User Defined Attributes';
    for i in "${!udas[@]}" ; do printf '%s=%s\n' "$i" "${udas[$i]}" ; done | sort;
    echo;
    echo '# Contexts';
    for i in "${!context[@]}" ; do printf '%s=%s\n' "$i" "${context[$i]}" ; done | sort;
    echo;
    echo '# Reports';
    for i in "${!reports[@]}" ; do printf '%s=%s\n' "$i" "${reports[$i]}" ; done | sort;
    echo;
    echo '# Custom';
    for i in "${!customs[@]}" ; do printf '%s=%s\n' "$i" "${customs[$i]}" ; done | sort;
fi;

# vim: set ts=4 sw=4 tw=0 et :
