#!/usr/bin/env bash
#
# Run that command.
#
# -F fork into background
# -K keep/wait
# -N open cmd in new terminal-emulator

typeset \
    cmd \
    opt;

typeset -i \
    flag_F= \
    flag_K= \
    flag_N=;

for opt; do
    case $opt in
        (-F)
            flag_F=1;;
        (-K)
            flag_K=1;;
        (-N)
            flag_N=1;;
        (--)
            command -v "$2" 1>/dev/null 2>&1 || {
                printf "error: command not found: '%s'\n" "$2" 1>&2;
                exit 1;
            };
            cmd=$2;
            shift 2;
            break;;
    esac;
    shift 1;
done;

[[ -n $cmd ]] || {
    printf 'error: command missing\n' 1>&2;
    exit 1;
};

if
    test-tty 2>/dev/null;
then
    case $flag_F$flag_N$flag_K in
        (111)
            daemonize x-terminal -e "${SHELL:-sh}" -c "$cmd ${*@Q};exec ${SHELL:-sh}";;
        (110)
            daemonize x-terminal -e "${SHELL:-sh}" -c "$cmd ${*@Q}";;
        (100)
            setsidw "$cmd" "$@";;
        (011)
            x-terminal -e "${SHELL:-sh}" -c "$cmd ${*@Q};exec ${SHELL:-sh}";;
        (010)
            x-terminal -e "${SHELL:-sh}" -c "$cmd ${*@Q}";;
        (001)
            exec ${SHELL:-sh} -c "$cmd ${*@Q};printf 'Press ENTER to continue\n';read";;
        (000)
            exec "$cmd" "$@";;
    esac;
else
    case $flag_F$flag_N$flag_K in
        (111)
            daemonize x-terminal -e "${SHELL:-sh}" -c "$cmd ${*@Q};exec ${SHELL:-sh}";;
        (110)
            daemonize x-terminal -e "${SHELL:-sh}" -c "$cmd ${*@Q}";;
        (100)
            setsidw "$cmd" "$@";;
        (011)
            daemonize x-terminal -e "${SHELL:-sh}" -c "$cmd ${*@Q};exec ${SHELL:-sh}";;
        (010)
            daemonize x-terminal -e "${SHELL:-sh}" -c "$cmd ${*@Q}";;
        (001)
            daemonize ${SHELL:-sh} -c "$cmd ${*@Q};printf 'Press ENTER to continue\n';read";;
        (000)
            setsidw "$cmd" "$@";;
    esac;
fi;

# vim: set ts=4 sw=4 tw=0 et :
